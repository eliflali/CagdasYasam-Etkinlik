# Generated by Django 5.0.6 on 2024-09-21 15:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('etkinlik_takip', '0007_alter_eventattendance_unique_together'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Birim')),
            ],
        ),
        migrations.CreateModel(
            name='HelperDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NativeDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Registered',
            fields=[
                ('member_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='etkinlik_takip.member')),
                ('status', models.CharField(default='Member', max_length=100, verbose_name='Durum (Burslu/Gönüllü)')),
            ],
            bases=('etkinlik_takip.member',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ad')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta')),
                ('tc_number', models.CharField(max_length=11, verbose_name='TC Kimlik No')),
                ('school', models.CharField(blank=True, max_length=100, verbose_name='Okul')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Bölüm')),
                ('student_class', models.CharField(blank=True, max_length=50, verbose_name='Sınıf')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Telefon Numarası')),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Aktif')),
                ('points_collected', models.IntegerField(blank=True, default=0, verbose_name='Toplanan Puanlar')),
                ('total_volunteering_hours', models.IntegerField(blank=True, default=0, verbose_name='Toplam Gönüllü Saat')),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TargetGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BURS_VERENLER', 'Burs Verenler'), ('BURSLU_OGRENCILER', 'Burslu Öğrenciler'), ('COCUKLAR', 'Çocuklar'), ('GENCLER', 'Gençler'), ('GONULLULER', 'Gönüllüler'), ('KADINLAR', 'Kadınlar'), ('MEDYA_KAMUOYU', 'Medya - Kamuoyu'), ('OGRENCILER', 'Öğrenciler'), ('KURUMSAL_SIRKETLER_STO', "Kurumsal Şirketler - STÖ'ler"), ('RESMI_KURUMLAR_YEREL_YONETIMLER', 'Resmi Kurumlar - Yerel Yönetimler'), ('OGRENCILER_YETISKINLER', 'Öğrenciler-Yetişkinler'), ('UYELER', 'Üyeler'), ('VELILER', 'Veliler'), ('UYELER_VE_GONULLULER', 'Üyeler ve Gönüllüler'), ('HALK', 'Halk'), ('YONETIM_KURULU', 'Yönetim Kurulu'), ('ESNAF', 'Esnaf')], max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteers',
            fields=[
                ('member_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='etkinlik_takip.member')),
                ('status', models.CharField(default='VolunteeringMember', max_length=100, verbose_name='Durum (Burslu/Gönüllü)')),
            ],
            bases=('etkinlik_takip.member',),
        ),
        migrations.RenameField(
            model_name='eventattendance',
            old_name='points_gained',
            new_name='event_point',
        ),
        migrations.RemoveField(
            model_name='member',
            name='active',
        ),
        migrations.RemoveField(
            model_name='member',
            name='department',
        ),
        migrations.RemoveField(
            model_name='member',
            name='email',
        ),
        migrations.RemoveField(
            model_name='member',
            name='group',
        ),
        migrations.RemoveField(
            model_name='member',
            name='mission',
        ),
        migrations.RemoveField(
            model_name='member',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='member',
            name='points_collected',
        ),
        migrations.RemoveField(
            model_name='member',
            name='school',
        ),
        migrations.RemoveField(
            model_name='member',
            name='student_class',
        ),
        migrations.AddField(
            model_name='event',
            name='attendant_from_other',
            field=models.IntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='event',
            name='attendant_from_us',
            field=models.IntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='event',
            name='category',
            field=models.CharField(default='', max_length=50),
        ),
        migrations.AddField(
            model_name='event',
            name='end_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='explanation',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='manager_member',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_events', to='etkinlik_takip.member'),
        ),
        migrations.AddField(
            model_name='event',
            name='start_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='eventattendance',
            name='attendance_status_member',
            field=models.CharField(blank=True, choices=[('attended', 'Attended'), ('not_attended', 'Not Attended')], max_length=15, null=True),
        ),
        migrations.AddField(
            model_name='eventattendance',
            name='attendance_status_student',
            field=models.CharField(blank=True, choices=[('attended', 'Attended'), ('excused', 'Has Excuse'), ('not_attended', 'Not Attended')], max_length=15, null=True),
        ),
        migrations.AddField(
            model_name='eventattendance',
            name='excuse',
            field=models.TextField(blank=True, null=True, verbose_name='Excuse'),
        ),
        migrations.AddField(
            model_name='eventattendance',
            name='personal_attendance_point',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='member',
            name='end_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='member',
            name='start_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='member',
            name='total_volunteering_hours',
            field=models.IntegerField(blank=True, default=0, verbose_name='Toplam Gönüllü Saat'),
        ),
        migrations.AlterField(
            model_name='event',
            name='date',
            field=models.DateTimeField(blank=True),
        ),
        migrations.AlterField(
            model_name='eventattendance',
            name='member',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attended_events', to='etkinlik_takip.member'),
        ),
        migrations.AddField(
            model_name='event',
            name='helper_departments',
            field=models.ManyToManyField(blank=True, related_name='helper_events', to='etkinlik_takip.helperdepartment'),
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='etkinlik_takip.department')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='etkinlik_takip.member')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='departments',
            field=models.ManyToManyField(blank=True, related_name='members', through='etkinlik_takip.Membership', to='etkinlik_takip.department'),
        ),
        migrations.AddField(
            model_name='event',
            name='native_departments',
            field=models.ManyToManyField(blank=True, related_name='native_events', to='etkinlik_takip.nativedepartment'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Proje')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='etkinlik_takip.department')),
            ],
        ),
        migrations.AddField(
            model_name='membership',
            name='projects',
            field=models.ManyToManyField(blank=True, to='etkinlik_takip.project'),
        ),
        migrations.CreateModel(
            name='ScholarshipStudent',
            fields=[
                ('student_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='etkinlik_takip.student')),
                ('mission', models.CharField(max_length=100, verbose_name='Görev')),
                ('group', models.CharField(blank=True, max_length=100, verbose_name='Öbek')),
                ('status', models.CharField(default='ScholarshipStudent', max_length=100, verbose_name='Durum (Burslu/Gönüllü)')),
            ],
            bases=('etkinlik_takip.student',),
        ),
        migrations.CreateModel(
            name='VolunteeringStudent',
            fields=[
                ('student_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='etkinlik_takip.student')),
                ('status', models.CharField(default='VolunteeringStudent', max_length=100, verbose_name='Durum (Burslu/Gönüllü)')),
            ],
            bases=('etkinlik_takip.student',),
        ),
        migrations.AlterUniqueTogether(
            name='eventattendance',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='event',
            name='manager_student',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_events', to='etkinlik_takip.student'),
        ),
        migrations.AddField(
            model_name='eventattendance',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attended_events', to='etkinlik_takip.student'),
        ),
        migrations.AlterUniqueTogether(
            name='eventattendance',
            unique_together={('member', 'student', 'event')},
        ),
        migrations.CreateModel(
            name='StudentMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='etkinlik_takip.department')),
                ('projects', models.ManyToManyField(blank=True, to='etkinlik_takip.project')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='etkinlik_takip.student')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='target_groups',
            field=models.ManyToManyField(blank=True, related_name='events', to='etkinlik_takip.targetgroup'),
        ),
    ]
